########################################
############# Git stuff #################
alias gco='git checkout'
alias gst=' git status'
alias glog='git log --color --graph'

alias gd='git diff'
alias gdd='git diff --cached'
alias gb='git branch -v'
alias gp='git remote -v'
alias gf='git show --name-status'
alias gan='git blame'

alias gtag='git show `git describe` --pretty=fuller'


alias gtop='git shortlog -s -n'
alias glast='git diff HEAD^..HEAD'
alias glastf='git diff-tree --no-commit-id --name-only -r HEAD'

alias gcd=' git checkout develop'
alias gcm=' git checkout main'
alias gcma=' git checkout master'
alias git_check_merged='git branch -r --merged'
alias git_prune='git remote prune origin'

# squash last two commits
alias gsquash='git rebase -i HEAD~2'
alias gac='git commit --amend'

# un-commit-last-un-pushed-git-commit-without-losing-the-changes
alias gunc='git reset --soft HEAD~1'


alias gpu='git pull --rebase'
alias gprune='git fetch --all --prune'

alias gin_origin='git fetch && git log ..origin/develop'
alias gin_upstream='git fetch && git log ..upstream/develop'
alias gout_origin='git fetch && git log origin/develop..'


function gh(){
    # remote=$(git config remote.origin.url | cut -d ':' -f 1)
    # echo "Remote: $remote"
    # open $(git config remote.origin.url | sed "s/git@\(.*\):\(.*\).git/https:\/\/\1\/\2/")/$1$2
    open $(git config remote.origin.url | sed "s/git@\(.*\):\(.*\)/https:\/\/\1\/\2/")/$1$2
}

# Open current branch
# alias ghb='gh tree/$(git symbolic-ref --quiet --short HEAD )'

# Open current directory/file in current branch
alias ghbf="gh tree/$(git symbolic-ref --quiet --short HEAD )/$(git rev-parse --show-prefix)"

# Open current directory/file in the main branch
alias ghf='gh tree/main/$(git rev-parse --show-prefix)'


# List commits on all remote branches
# git rev-list --remotes

# https://gist.github.com/jasonrudolph/1810768
# https://stackoverflow.com/questions/36358265/when-does-git-refresh-the-list-of-remote-branches
# git fetch -p
# git config remote.origin.prune true
function gb_30() {
    git branch -r --format="%(committerdate:iso8601), %(committerdate:relative) - %(refname:short)" | grep -v [H]EAD | awk -v dateA="$(date -d "$(date +%Y-%m-%d) - 3 days" +%Y-%m-%d)" -F '|' 'dateA<=$1" "$2' | awk -F '/' '{ print $NF }'
}


function gitlab() {
    # show project id 
    curl -s -XGET --header "PRIVATE-TOKEN: $GITLAB_TOKEN" "https://gitlab.com/api/v4/projects?owned=true" | jq .
}
